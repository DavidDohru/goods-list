{"version":3,"sources":["Components/FormControl/FormControl.jsx","Components/ListOfGoods/ListOfGoods.jsx","App.js","reportWebVitals.js","index.js"],"names":["FormControl","listOfUsers","setNameForDelete","nameForDelete","useState","cardName","setCardName","imageUrl","setImageUrl","count","setCount","weight","setWeight","description","setDescription","widthProduct","setWidthProduct","heightProduct","setHeightProduct","badLength","setBadLength","Form","className","Control","value","isInvalid","onChange","target","placeholder","InputGroup","Text","type","length","disabled","to","exact","onClick","name","width","height","localStorage","setItem","JSON","stringify","id","size","filter","x","addAndUpdateNewUser","Button","ListOfGoods","array","list","removeElement","removeComments","setListOfUsers","setListOfComments","listOfComments","smShow","setSmShow","searchCount","setSearchCount","idForRemove","setIdForRemove","searchName","setSearchName","useEffect","parse","getItem","item","filterByCount","toLowerCase","includes","map","Modal","show","onHide","Header","Title","Body","variant","undefined","CloseButton","Image","rounded","alt","src","App","idForDelete","setIdForDelete","idRemoveComments","setIdRemoveComments","comment","setComment","clearPerson","productId","postId","path","users","index","comments","isValid","as","rows","Feedback","date","Date","toLocaleString","addNewComments","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6a4b3833.chunk.js","sourcesContent":["import React,{useState} from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { Link } from \"react-router-dom\";\nimport './FormControl.scss';\nimport { \n  Form,\n  InputGroup,\n  Button,\n} from 'react-bootstrap';\n\nexport const FormControl = ({listOfUsers,setNameForDelete,nameForDelete}) => {\n  const [cardName , setCardName] = useState('');\n  const [imageUrl, setImageUrl] = useState('');\n  const [count , setCount] = useState(0);\n  const [weight , setWeight] = useState(0);\n  const [description, setDescription] = useState('');\n  const [widthProduct , setWidthProduct] = useState(0);\n  const [heightProduct , setHeightProduct] = useState(0);\n  const [badLength , setBadLength] = useState(true);\n  const addAndUpdateNewUser = (name,imageUrl,count,weight,description,width,height,nameForDelete) => {\n    if (listOfUsers.length) {\n      return localStorage.setItem('array',\n        JSON.stringify([\n          ...listOfUsers,\n        { \n          description,\n          id:  listOfUsers[listOfUsers.length-1].id + 1,\n          name,\n          imageUrl,\n          count,\n          weight,\n          size:{\n            width,\n            height,\n          }\n        }\n    ].filter(x =>  {\n      if (nameForDelete !== 0) {\n        return (x.id !== nameForDelete);\n      }\n      return x;\n    })));\n    }\n    else {\n      return localStorage.setItem('array', JSON.stringify([ { \n        description,\n        id: 1,\n        name,\n        imageUrl,\n        count,\n        weight,\n        size:{\n          width,\n          height,\n        }\n      }]));\n    }\n  }\n\n\n  return(\n  <Form className=\"Form\">\n    <Form.Control\n      value={cardName}\n      isInvalid={cardName? false : true}\n      onChange={({target}) => setCardName(target.value)}\n      placeholder=\"Enter the card name\"\n    />\n    <Form.Control \n      value={imageUrl}\n      isInvalid={imageUrl ? false : true}\n      onChange={({target})=> setImageUrl(target.value)}\n      placeholder=\"Enter the imageUrl\"\n    />\n    <InputGroup>\n      <InputGroup.Text>Count of products</InputGroup.Text>\n        <Form.Control\n          value={count}\n          onChange={({target})=> setCount(target.value)}\n          type=\"number\"\n        />\n      </InputGroup>\n    <InputGroup>\n      <InputGroup.Text>Weight of products</InputGroup.Text>\n        <Form.Control\n          value={weight}\n          onChange={({target})=> setWeight(target.value)}\n          type=\"number\"\n        />\n      </InputGroup>\n    <InputGroup>\n      <InputGroup.Text>Description</InputGroup.Text>\n        <Form.Control\n          isInvalid={description ? false : true}\n          value={description}\n          onChange={({ target }) => {\n            setDescription(target.value);\n            if((imageUrl && cardName && target.value).length) {\n              setBadLength(false);\n            } else {\n              setBadLength(true);\n            }\n          }}\n        />\n      </InputGroup>\n    <InputGroup>\n      <InputGroup.Text>Width of product</InputGroup.Text>\n        <Form.Control\n          type=\"number\"\n          value={widthProduct}\n          onChange={({ target }) => setWidthProduct(target.value)}\n        />\n      </InputGroup>\n    <InputGroup>\n      <InputGroup.Text>Height of product</InputGroup.Text>\n        <Form.Control\n          type=\"number\"\n          value={heightProduct}\n          onChange={({ target }) => setHeightProduct(target.value)}\n        />\n      </InputGroup>\n      <Link\n         disabled={badLength && true}\n          to={!badLength && \"/\"} exact\n          onClick={()=>{\n            if((cardName && imageUrl && description).length) {\n              addAndUpdateNewUser(\n                cardName,\n                imageUrl,\n                count,\n                weight,\n                description,\n                widthProduct,\n                heightProduct,\n                nameForDelete,\n              );\n              setImageUrl('');\n              setCardName('');\n              setWidthProduct(0);\n              setHeightProduct(0);\n              setDescription('');\n              setWeight(0);\n              setCount(0);\n              setNameForDelete(0);\n            }\n            setBadLength(true);\n        }}\n        >\n          <Button disabled={badLength && true}>Save</Button>\n        </Link>\n    </Form>\n  );\n}\n","import React , { useState } from 'react';\nimport { useEffect } from 'react';\nimport { Button, CloseButton, Image, Modal,Form,InputGroup} from 'react-bootstrap';\nimport { Link } from \"react-router-dom\";\n\nexport const ListOfGoods = ({list,removeElement,removeComments,setListOfUsers,setListOfComments,listOfComments}) => {\n  const [smShow, setSmShow] = useState(false);\n  const [searchCount , setSearchCount] = useState(0);\n  const [idForRemove,setIdForRemove] = useState(0);\n  const [searchName, setSearchName] = useState('');\n\n\n  const filterByName = (array) => {\n    if (searchName.length) {\n      return array.filter(item => item.name.toLowerCase()\n        .includes(searchName.toLowerCase()))\n    }\n    return array;\n  }\n\n  const filterByCount = (array) => {\n    if (+searchCount !== 0) {\n      return array.filter(item => item.count >= +searchCount);\n    } else {\n      return array;\n    }\n  }\n\n  \n  useEffect(() => \n    setListOfUsers((JSON.parse(localStorage.getItem('array'))))\n      ,[idForRemove]);\n   useEffect(()=>\n     setListOfComments((JSON.parse(localStorage.getItem('comments'))))\n      ,[listOfComments])\n\n  return (\n  <>\n    <div className=\"form__container\">\n    <InputGroup>\n        <InputGroup.Text>Filter by name</InputGroup.Text>\n          <Form.Control\n            className='modal__filter-title'\n            placeholder=\"filter by name\"\n            value={searchName}\n            onChange={({ target }) => setSearchName(target.value)}\n          />\n      </InputGroup>\n      <InputGroup>\n        <InputGroup.Text>Filter by count</InputGroup.Text>\n          <Form.Control\n            className='modal__filter-title'\n            type=\"number\"\n            value={searchCount}\n            onChange={({ target }) => setSearchCount(target.value)}\n          />\n      </InputGroup>\n    </div>\n    {filterByCount(filterByName(list)).map((x)=>(\n      <div\n        key={x.id} \n        className=\"card\"\n      >\n    <Modal\n      size=\"sm\"\n      show={smShow}\n      onHide={() => setSmShow(false)}\n    >\n      <Modal.Header>\n      <Modal.Title id=\"example-modal-sizes-title-sm\">\n        Are you sure want to delete it ?\n        (reload the page after deleting)\n      </Modal.Title>\n    </Modal.Header>\n    <Modal.Body className=\"button__form-container\">\n      <Button\n        variant=\"danger\"\n        onClick={() => {\n        removeElement(idForRemove);\n        setIdForRemove(0);\n        removeComments(undefined,x.id); \n        setSmShow(false);\n        }}\n      >\n        Submit\n      </Button>\n      <Button onClick={() => setSmShow(false)}>Cancel</Button>\n    </Modal.Body>\n  </Modal>\n        <CloseButton \n          onClick={() => {\n            setIdForRemove(x.id);\n            setSmShow(true);\n          }}\n          className=\"card__button-close\"\n        />\n        <Image\n          rounded\n          alt={x.name}\n          src={x.imageUrl}\n          className=\"card__images\"\n          />\n        <div className=\"card__container\">\n          <h3>{x.name}</h3>\n          <p className={x.count? 'in_stock':'not_available'}>\n            {x.count\n              ? 'In stock'\n              :'Not available'\n            }\n          </p>\n          <p>Count of products:{` ${x.count}`}</p>\n          <p>Weight:{` ${x.weight}g`}</p>\n        </div>\n        <Link\n          to={`/${x.id}`} \n          exact\n          className=\"card__button-info\"\n        >\n          info\n        </Link>\n      </div>\n      ))\n      }\n    </>\n  );\n};","import React , {  useState, useEffect, Fragment } from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { FormControl } from './Components/FormControl/FormControl';\n\nimport { \n  Button,\n  Form,\n  CloseButton,\n  Image\n} from 'react-bootstrap';\nimport { ListOfGoods } from './Components/ListOfGoods/ListOfGoods';\nimport './App.scss';\nimport { Switch, Route, Link } from \"react-router-dom\";\nfunction App() {\n  let [listOfUsers,setListOfUsers] = useState((JSON.parse(localStorage.getItem('array'))));\n  let [listOfComments,setListOfComments] = useState((JSON.parse(localStorage.getItem('comments'))));\n  const [idForDelete , setIdForDelete] = useState(0);\n  const [idRemoveComments,setIdRemoveComments] = useState(0);\n  const [nameForDelete,setNameForDelete] = useState(0);\n  const [comment, setComment] = useState('');\n  const [badLength, setBadLength] = useState(false);\n  \n\n  useEffect(() => \n    setListOfComments(JSON.parse(localStorage.getItem('comments'))),\n    [idRemoveComments,comment.length]);\n\n  const removeElement = (id) => {\n    return localStorage.setItem('array', \n    JSON.stringify(\n      listOfUsers.filter(x => x.id !== id)\n    )\n  );\n  }\n\n  const addNewComments = (comments=\"\",id) => {\n    if(listOfComments.length) {\n      return localStorage.setItem('comments',\n      JSON.stringify([\n        ...listOfComments,\n        {\n          postId: listOfComments.length + 1,\n          productId: id,\n          comments,\n          date: new Date().toLocaleString()\n       }\n  ]));\n    } else {\n      return localStorage.setItem('comments',\n      JSON.stringify([\n        {\n          postId: listOfComments.length + 1,\n          productId: id,\n          comments: comment,\n          date: new Date().toLocaleString()\n       }\n  ]));\n    }\n  }\n\n\nconst removeComments = (id,clearPerson) => {\n  if (clearPerson) {\n    return localStorage.setItem('comments', \n    JSON.stringify(\n      listOfComments.filter(x => x.productId !== clearPerson)\n    )\n  );\n  }\n  return localStorage.setItem('comments', \n    JSON.stringify(\n      listOfComments.filter(x => x.postId !== id)\n    )\n  );\n}\n\n\n  return(\n    <div>\n   <Switch>\n    <Route path=\"/\" exact>\n        <div>\n        <Link className=\"form__product_add\" to=\"/modalWindowForm\">\n        <Button\n          variant=\"outline-primary\"\n        >\n          New Product\n        </Button>\n      </Link>\n          <div className=\"all__card_container\">\n            <ListOfGoods\n              setListOfUsers={setListOfUsers}\n              removeElement={removeElement}\n              removeComments={removeComments}\n              listOfComments={listOfComments}\n              setListOfComments={setListOfComments}\n              idForDelete={idForDelete}\n              setIdForDelete={setIdForDelete}\n              list={listOfUsers}\n            />\n          </div>\n        </div>\n      </Route>\n    <Route path=\"/modalWindowForm\">\n    <div className=\"modal__window-form\">\n      <div className=\"modal__title-container\">\n        Add new card\n          <Link\n            to=\"/\"\n            exact\n          >\n            <CloseButton className=\"card__button-close\"/>\n          </Link>\n        </div>\n          <FormControl\n            listOfUsers={listOfUsers}\n            nameForDelete={nameForDelete}\n            setNameForDelete={setNameForDelete}\n          />\n    </div>\n    </Route>\n    {\n      listOfUsers.map(users => (\n      <Route\n        key={users.id} \n        path={`/${users.id}`}\n        exact\n      >\n        <Link  \n          to=\"/\"\n          exact\n          >\n          <Button \n            variant=\"outline-danger\"\n            className=\"form__product_back\"\n          >\n            Back\n          </Button>\n        </Link>\n       <Link\n         to={`/${users.id}/edit`}\n       >\n       <Button\n          variant=\"outline-success\"\n          className=\"form__product_edit\" \n          onClick={()=> setNameForDelete(users.id)}\n        >\n          Edit\n        </Button>\n       </Link>\n          <div className=\"card__full\">\n            <h1>{users.name}</h1>\n            <div className=\"card__full-container\">\n              <Image\n                rounded\n                className=\"card__full-img\"\n                alt={users.name} \n                src={users.imageUrl}\n              />\n              <div>\n                Description:\n                <p>{users.description}</p>\n                <p>Count: {users.count}</p>\n                <p>Weight: {users.weight}g</p>\n                <p className={users.count? 'in_stock':'not_available'}>\n                  {users.count\n                    ? 'In stock'\n                    :'Not available'\n                  }\n                </p>\n                <p>Size - Width: {users.size.width} Heigth: {users.size.height}</p>\n                <ul>{listOfComments\n                .filter(item => item.productId === users.id)\n                  .map((comment,index) => {\n                  if (users.id === comment.productId) {\n                    return(\n                    <Fragment key={comment.id}>\n                      Comment #{index + 1 }<div>By user id : {users.id}</div>\n                      <li className=\"card__full-list_comments\">\n                        <div className=\"card__full-list_item\">{comment.comments}</div>\n                        <CloseButton\n                          onClick={()=> {\n                            removeComments(comment.postId);\n                            setIdRemoveComments(comment.postId);\n                          }}\n                        />\n                      </li>\n                    </Fragment>\n                    )\n                  }\n                })}</ul>\n                <div className=\"card__full-contol_block\">\n                  <Form.Control\n                    isInvalid={(badLength) && true}\n                    isValid={(comment)&& true}\n                    as=\"textarea\" rows={3}\n                    onChange={({target})=> {\n                      setComment(target.value);\n                      if (target.value.length) {\n                        setBadLength(false);\n                      }\n                    }}\n                    value={comment}\n                  />\n                  <Form.Control.Feedback type=\"invalid\">\n                    Please enter a comment (minimal length = 1).\n                  </Form.Control.Feedback>\n                  <Button\n                    onClick={() => {\n                      if(comment.length >= 1) {\n                        addNewComments(comment, users.id);\n                        setComment('');\n                        setBadLength(false);\n                      } else {\n                        setBadLength(true);\n                        }\n                    }}\n                  >\n                    Add comment\n                  </Button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </Route>\n      ))\n    }\n    {\n      listOfUsers.map(users=> (\n        <Route\n          key={users.id} \n          path={`/${users.id}/`}\n        >\n            <div className=\"modal__window-form\">\n              <Link\n                to={`/${users.id}`}\n              >\n                <Button variant=\"outline-danger\">Back</Button>\n              </Link>\n              <h2>Edit Form</h2>\n              <FormControl\n                listOfUsers={listOfUsers}\n                nameForDelete={nameForDelete}\n                setNameForDelete={setNameForDelete}\n              />\n            </div>\n        </Route>\n        ))\n      }\n    </Switch>\n  </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { HashRouter } from 'react-router-dom'\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}